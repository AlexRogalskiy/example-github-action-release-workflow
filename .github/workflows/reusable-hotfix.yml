name: Reusable - Hotfix
on:
  workflow_call:
    inputs:
      organization:
        required: true
        type: string
      repository:
        required: true
        type: string
      registry:
        description: "Docker registry"
        required: false
        type: string
        default: registry.hub.docker.com
##
##  Example how to use private shared actions
##
#    secrets:
#      github-pat:
#        required: true

env:
  ORGANIZATION: ${{ inputs.organization }}
  ACTION_REPO_NAME: ${{ inputs.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
##
##  Example how to use private shared actions
##
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          repository: ${{ inputs.organization }}/github-shared-actions
#          token: ${{ secrets.github-pat }}
#          path: github-shared-actions

      - name: Build
        id: build
        uses: ./github-shared-actions/actions/build
        with:
          organization: ${{ inputs.organization }}
          repository: ${{ inputs.repository }}
          registry: ${{ inputs.registry }}

    outputs:
      image: ${{ steps.build.outputs.image }}
      tag: ${{ steps.build.outputs.tag }}

  release:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 'Get Previous tag'
        id: previoustag
        shell: sh
        run: |
          git fetch --tags --force
          git describe --always --tags --abbrev=0 ${{ github.sha }}
          VERSION=$(git describe --always --tags --abbrev=0  ${{ github.sha }})
          echo "::set-output name=version::${VERSION}"

      - name: 'Get next minor version'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.version }}

      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.semvers.outputs.patch }}
          commit: ${{ github.sha }}
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
